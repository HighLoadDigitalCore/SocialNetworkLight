@using SexiLove.Extensions
@using SexiLove.Models
@model SexiLove.Models.EventsSearch
@{
    var currentUser = ((BaseController)ViewContext.Controller).CurrentUser ?? new User() { ID = 0 };
    var friends = new xDBDataContext().Friends.Where(
        x => x.IsRead && (x.FromUserID == currentUser.ID || x.ToUserID == currentUser.ID) && x.Status == 1).ToList().Select(x => x.GetUserID(currentUser)).ToList();
}
<script type="text/javascript">
    $().ready(function () {
        if ($('#STID').val()) {
            $('.city-selected .jq-selectbox__select-text').text($('.city-selected select option[value="' + $('#STID').val() + '"]').text());

        }
    });

    function setfocus(arg) {
        $('input[name="' + arg + '"]').pickmeup('show');;
        return false;
    }

    function changeBtnGo(arg) {
        $.post('/Events/ChangeGo', { ID: arg }, function (d) {
            $('.event-list-item[arg="' + arg + '"]').replaceWith(d);
        });
    }

</script>
<div id="DateingList">
    <div class="event-towns">
        @foreach (var cat in Model.Cats)
        {
            <a class="@(HttpContext.Current.Request["cat"] == cat.ExportURL ? "active":"")" href="@Url.Action("Index", new { cat = cat.ExportURL })">@cat.Name</a>
        }
    </div>
    <div class="event-head">Список мероприятий</div>


    <div class="search row search-event">
        @using (Ajax.BeginForm("EventsSearch", "Events", new AjaxOptions() { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "DateingList", OnComplete = "initUIAgain($('#DateingList'));" }))
        {
            <input type="hidden" name="TownID" id="STID" value="@Model.TownID" />
            <div class="row">

                <input type="text" name="Name" value="@Model.Name" placeholder="Поиск мероприятий" class="event-name-search" />

                <div class="search-block search-block-4" style="width: 320px">
                    <label for="search-date-min">Дата</label>
                    <div class="input-range">
                        <div class="input-range-min" style="width: 150px">
                            <input type="text" name="MinDate" arg="date" value="@(Model.MinDate.HasValue ? Model.MinDate.Value.ToString("dd.MM.yyyy"):"")" placeholder="с" id="search-date-min" style="float: left;width: 105px; margin-right: 5px">
                            <a class="calendar" href="#" onclick="setfocus('MinDate'); return false;"></a>
                        </div>
                        <div class="input-range-max" style="width: 150px">
                            <input type="text" name="MaxDate" arg="date" value="@(Model.MaxDate.HasValue ? Model.MaxDate.Value.ToString("dd.MM.yyyy"):"")" placeholder="по" id="search-date-max" style="float: left;width: 105px; margin-right: 5px; margin-left: 5px">
                            <a class="calendar" href="#" onclick="setfocus('MaxDate'); return false;"></a>
                        </div>
                    </div>
                </div>
                <div class="search-block search-block-4" style="width: 280px">
                    <button type="submit" class="btn btn-blue btn-upper btn-xsmall" style="margin-top: 32px; float: right">Поиск</button>
                </div>
            </div>
        }
    </div>
    <ul class="list-unstyled event-list event-list-full">
        @foreach (var meet in Model.Result.Take(60))
        {
            var iamgo = meet.EventPeoples.Any(x => x.FromUserID == currentUser.ID && x.Status == 1 && x.Type == 1) || meet.EventPeoples.Any(x => x.ToUserID == currentUser.ID && x.Status == 1 && x.Type == 1);
            <li class="event-list-item" arg="@meet.ID">
                <div class="event-name"><a href="@Url.Action("View", "Events", new { ID = meet.ID })" title="@meet.Name">@Html.Raw(meet.Name)</a></div>
                <div class="event-date">@meet.StartDate.Value.ToString("d MMMM yyyy")</div>
                <div class="event-list-item-img">
                    @if (iamgo)
                    {
                        <div class="i-am-go"></div>
                    }
                    <a href="@Url.Action("View", "Events", new { ID = meet.ID })"><img src="@meet.Photo?w=200&h=200&mode=crop"></a>
                </div>

                <div class="event-list-item-content">
                    <div class="line">
                        <span>Идут:</span>@meet.EventPeoples.Count(x => x.Status == 1 && x.Type == 1) человек
                    </div>
                    <div class="line">
                        <span>Ваших друзей:</span>@meet.EventPeoples.Count(x => x.Status == 1 && (friends.Contains(x.ToUserID ?? 0) || friends.Contains(x.FromUserID))) человек
                    </div>
                    <div class="line">
                        <span>Ищут с кем пойти:</span>@meet.EventPeoples.Count(x => x.Status == 1 && x.Type == 0) человек
                    </div>
                </div>
                @if (currentUser.ID > 0)
                {
                    if (iamgo)
                    {
                        <a id="btnGo" href="#" onclick="changeBtnGo(@meet.ID); return false;" class=" btn btn-blue btn-upper btn-xsmall btn-go">Я не иду</a>
                    }
                    else
                    {
                        <a id="btnGo" href="#" onclick="changeBtnGo(@meet.ID); return false;" class=" btn btn-green btn-upper btn-xsmall btn-go">Я иду</a>
                    }
                }

            </li>

        }

    </ul>
</div>
