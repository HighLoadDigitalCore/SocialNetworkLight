@using SexiLove.Extensions
@model SexiLove.Models.MeetingFullSearch
<script type="text/javascript">
    function split(val) {
        return val.split(/,\s*/);
    }
    function extractLast(term) {
        return split(term).pop();
    }

    $().ready(function () {
        if ($('#STID').val()) {
            $('.city-selected .jq-selectbox__select-text').text($('.city-selected select option[value="' + $('#STID').val() + '"]').text());

        }

        $("#Place").autocomplete({
            source: function (request, response) {
                $.getJSON("/Meeting/PlacesList", {
                    term: extractLast(request.term)
                }, response);
            },
            search: function () {
                // custom minLength
                var term = extractLast(this.value);
                if (term.length < 2) {
                    return false;
                }
            },
            focus: function () {
                // prevent value inserted on focus
                return false;
            },
            select: function (event, ui) {
                //alert(ui.item.value);
                
                var select = $('select[name="PlaceID"]');
                var val = select.find('option:contains("' + ui.item.label + '")').attr("value");
                select.val(val);
                select.trigger('refresh');
                
                /*
                            var terms = split(this.value);
                            // remove the current input
                            terms.pop();
                            // add the selected item
                            terms.push(ui.item.value);
                            // add placeholder to get the comma-and-space at the end
                            terms.push("");
                            this.value = terms.join(", ");
            */
                return false;
            }
        });
    });
</script>
<div id="DateingList">
    <div class="search row">
        @using (Ajax.BeginForm("FullSearch", "Meeting", new AjaxOptions() { HttpMethod = "POST", InsertionMode = InsertionMode.Replace, UpdateTargetId = "DateingList", OnComplete = "initUIAgain($('#DateingList'));" }))
        {
            <input type="hidden" name="TownID" id="STID" value="@Model.TownID" />

            <h3>Куда пойти</h3>
            <div class="row">
                <div class="content-column">
                    <input type="text" placeholder="Начните ввод" name="Place" id="Place">
                </div>
                <div class="content-column">
                    <select name="PlaceID">
                        <option @(!Model.PlaceID.HasValue ? "selected" : "") value=""></option>
                        @foreach (var place in Model.Places)
                        {
                            <option @(Model.PlaceID == place.ID ? "selected" : "") value="@place.ID">@place.Name</option>
                        }
                    </select>
                </div>
            </div>
            <h3>Кто приглашает</h3>
            <div class="row">
                <div class="content-column">
                    <select id="search-object" name="Sex">
                        <option value="True" @(Model.Sex ? "selected" : "")>Парень</option>
                        <option value="False" @(!Model.Sex ? "selected" : "")>Девушка</option>
                    </select>
                    <label for="search-age-min" class="inline">В возрасте</label>


                    <div class="input-range-min">
                        <input type="text" value="@Model.MinAge" name="MinAge" placeholder="от" id="search-age-min">
                    </div>
                    <div class="input-range">
                    </div>
                    <div class="input-range-max">
                        <input type="text" value="@Model.MaxAge" name="MaxAge" placeholder="до" id="search-age-max">
                    </div>


                    @*    <div class="select-range small">
                            <div class="select-range-min">
                                <select name="search-age-min" id="search-age-min">
                                    <option>от</option>
                                    <option>1</option>
                                    <option>2</option>
                                    <option>3</option>
                                </select>
                            </div>
                            <div class="select-range-max">
                                <select name="search-age-max" id="search-age-max">
                                    <option>до</option>
                                    <option>1</option>
                                    <option>2</option>
                                    <option>3</option>
                                </select>
                            </div>
                        </div>*@
                </div>
                <div class="content-column">
                    <select name="Orientation">
                        <option value="" @(Model.Orientation.IsNullOrEmpty() ? "selected" : "")></option>
                        <option value="Гетеро" @(Model.Orientation == "Гетеро" ? "selected" : "")>Гетеро</option>
                        <option value="Гей" @(Model.Orientation == "Гей" ? "selected" : "")>Гей</option>
                        <option value="Би" @(Model.Orientation == "Би" ? "selected" : "")>Би</option>
                        <option value="Лесби" @(Model.Orientation == "Лесби" ? "selected" : "")>Лесби</option>
                    </select>
                </div>
            </div>
            <div class="row input-checkbox">
                @Html.CheckBox("IsFromSponsor", Model.IsFromSponsor, new { ID = "IsFromSponsor" })
                <label for="IsFromSponsor" class="small-label normal">Показывать объявления от спонсоров встречи</label>
            </div>
            <div class="row input-checkbox">
                @Html.CheckBox("IsForSponsor", Model.IsForSponsor, new { id = "IsForSponsor" })
                <label for="IsForSponsor" class="small-label normal">Показывать объявления ищущих спонсоров встречи</label>
            </div>
            <div class="row input-checkbox">
                @Html.CheckBox("IsFromFriends", Model.IsFromFriends, new { id = "IsFromFriends" })
                <label for="IsFromFriends" class="small-label normal">Показывать только объявления друзей</label>
            </div>
            <div class="row input-checkbox">
                @Html.CheckBox("IsFromSympaty", Model.IsFromSympaty, new { id = "IsFromSympaty" })
                <label for="IsFromSympaty" class="small-label normal">Показывать только объявления от симпатий</label>
            </div>
            <div class="row">
                <div class="content-column">
                    <h3>Дата встречи</h3>
                    <div class="select-range">
                        <div class="select-range-min">
                            <input type="text" style="width: 120px;" name="MinDate" arg="date" value="@Model.MinDate" placeholder="сегодня" id="search-date-min">
                        </div>
                        <div class="select-range-max">
                            <input type="text" style="width: 120px;" name="MaxDate" arg="date" value="@Model.MaxDate" placeholder="завтра" id="search-date-max">
                        </div>

                    </div>
                </div>
                <div class="content-column">
                    <h3>Время встречи</h3>
                    <div class="select-range">
                        <div class="select-range-min">
                            <input type="text" name="MinTimeStr" arg="time" value="@Model.MinTimeStr" placeholder="от">
                        </div>
                        <div class="select-range-max">
                            <input type="text" name="MaxTimeStr" arg="time" value="@Model.MaxTimeStr" placeholder="до">
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="content-column">
                    <h3>Поиск по ключевым словам</h3>
                    <input type="text" name="Keywords" value="@Model.Keywords" placeholder="Ключевые слова">
                </div>
            </div>
            <div class="row input-checkbox">
                @Html.CheckBox("Compartible", Model.Compartible, new { ID = "Compartible" })
                <label for="Compartible" class="small-label normal">Показывать только встречи, где я подхожу по критериям</label>
            </div>
            <div class="row input-checkbox">
                @Html.CheckBox("HidePayedMeetings", Model.HidePayedMeetings, new { ID = "HidePayedMeetings" })
                <label for="HidePayedMeetings" class="small-label normal">Скрывать платные встречи</label>
            </div>
            <div class="row text-center">
                <button type="submit" class="btn btn-blue btn-upper btn-small">Поиск</button>
            </div>
        }
    </div>
    <ul class="list-unstyled meeting-list">
        @foreach (var meet in Model.Result)
        {
            <li class="meeting-list-item">
                <div class="meeting-list-item-img"><a href="@Url.Action("Index", "Cabinet", new {ID = meet.User.ID})"><img src="@meet.User.Avatar?w=80&h=80&mode=crop"></a></div>
                <div class="meeting-list-item-content">
                    <strong>@meet.User.NameAndSurname </strong>@meet.Date.Value.ToString("d MMMM") приглашает @(meet.TargetSex ? "парня" : "девушку") @meet.Years лет в @meet.Place.Type.ToLower() @meet.Place.Name
                    <div><span class="icon icon-place"></span><a href="@Url.Action("View", "Places", new {ID = meet.PlaceID})" data-title="@meet.Place.Type @meet.Place.Name" class="address address-small">@meet.Place.Adress</a></div>
                    @if (meet.Comment.IsFilled())
                    {
                        <div class="comment">@meet.Comment</div>
                    }
                </div>
            </li>
        }

    </ul>


</div>
